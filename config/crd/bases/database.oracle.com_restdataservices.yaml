---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: restdataservices.database.oracle.com
spec:
  group: database.oracle.com
  names:
    kind: RestDataServices
    listKind: RestDataServicesList
    plural: restdataservices
    singular: restdataservices
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: RestDataServices is the Schema for the restdataservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RestDataServicesSpec defines the desired state of RestDataServices
            properties:
              globalSettings:
                description: Contains settings that are configured across the entire
                  ORDS instance.
                properties:
                  cacheMetadataEnabled:
                    description: Specifies the setting to enable or disable metadata
                      caching.
                    type: boolean
                  cacheMetadataGraphqlExpireAfterAccess:
                    description: Specifies the duration after a GraphQL schema is
                      not accessed from the cache that it expires.
                    format: int64
                    type: integer
                  cacheMetadataJwksEnabled:
                    description: Specifies the setting to enable or disable JWKS caching.
                    type: boolean
                  cacheMetadataJwksExpireAfterAccess:
                    description: Specifies the duration after a JWK is not accessed
                      from the cache that it expires. By default this is disabled.
                    format: int64
                    type: integer
                  cacheMetadataJwksExpireAfterWrite:
                    description: Specifies the duration after a JWK is cached, that
                      is, it expires and has to be loaded again.
                    format: int64
                    type: integer
                  cacheMetadataJwksInitialCapacity:
                    description: Specifies the initial capacity of the JWKS cache.
                    format: int32
                    type: integer
                  cacheMetadataJwksMaximumSize:
                    description: Specifies the maximum capacity of the JWKS cache.
                    format: int32
                    type: integer
                  cacheMetadataTimeout:
                    description: Specifies the setting to determine for how long a
                      metadata record remains in the cache. Longer duration means,
                      it takes longer to view the applied changes. The formats accepted
                      are based on the ISO-8601 duration format.
                    type: string
                  databaseApiEnabled:
                    description: Specifies whether the Database API is enabled.
                    type: boolean
                  databaseApiManagementServicesDisabled:
                    description: Specifies to disable the Database API administration
                      related services. Only applicable when Database API is enabled.
                    type: boolean
                  dbInvalidPoolTimeout:
                    description: 'Specifies how long to wait before retrying an invalid
                      pool. Default: 15m'
                    format: int64
                    type: integer
                  debugPrintDebugToScreen:
                    description: Specifies whether to display error messages on the
                      browser.
                    type: boolean
                  errorResponseFormat:
                    description: Specifies how the HTTP error responses must be formatted.
                      html - Force all responses to be in HTML format json - Force
                      all responses to be in JSON format auto - Automatically determines
                      most appropriate format for the request (default).
                    type: string
                  featureGrahpqlMaxNestingDepth:
                    description: Specifies the maximum join nesting depth limit for
                      GraphQL queries. Defaults to 5.
                    format: int32
                    type: integer
                  icapPort:
                    description: Specifies the Internet Content Adaptation Protocol
                      (ICAP) port to virus scan files. Either icap.port or icap.secure.port
                      are required to have a value.
                    format: int32
                    type: integer
                  icapSecurePort:
                    description: Specifies the Internet Content Adaptation Protocol
                      (ICAP) port to virus scan files. Either icap.port or icap.secure.port
                      are required to have a value. If values for both icap.port and
                      icap.secure.port are provided, then the value of icap.port is
                      ignored.
                    format: int32
                    type: integer
                  icapServer:
                    description: Specifies the Internet Content Adaptation Protocol
                      (ICAP) server name or IP address to virus scan files. The icap.server
                      is required to have a value.
                    type: string
                  logProcedure:
                    description: Specifies whether procedures are to be logged.
                    type: boolean
                  requestTraceHeaderName:
                    description: Specifies the name of the HTTP request header that
                      uniquely identifies the request end to end as it passes through
                      the various layers of the application stack. In Oracle this
                      header is commonly referred to as the ECID (Entity Context ID).
                    type: string
                  securityCredentialsAttempts:
                    description: Specifies the maximum number of unsuccessful password
                      attempts allowed. Enabled by setting a positive integer value.
                      Defaults to -1.
                    format: int32
                    type: integer
                  securityCredentialsLockTime:
                    description: Specifies the period to lock the account that has
                      exceeded maximum attempts. Defaults to 10m (10 minutes)
                    format: int64
                    type: integer
                  securityDisableDefaultExclusionList:
                    description: If this value is set to true, then the Oracle REST
                      Data Services internal exclusion list is not enforced. Oracle
                      recommends that you do not set this value to true.
                    type: boolean
                  securityExclusionList:
                    description: Specifies a pattern for procedures, packages, or
                      schema names which are forbidden to be directly executed from
                      a browser.
                    type: string
                  securityInclusionList:
                    description: Specifies a pattern for procedures, packages, or
                      schema names which are allowed to be directly executed from
                      a browser.
                    type: string
                  securityMaxEntries:
                    description: Specifies the maximum number of cached procedure
                      validations. Set this value to 0 to force the validation procedure
                      to be invoked on each request. Defaults to 2000.
                    format: int32
                    type: integer
                  securityVerifySSL:
                    description: Specifies whether HTTPS is available in your environment.
                    type: boolean
                  standaloneBinds:
                    description: Specifies the comma separated list of host names
                      or IP addresses to identify a specific network interface on
                      which to listen. Default 0.0.0.0
                    type: string
                  standaloneHttpPort:
                    description: 'Specifies the HTTP listen port. Default: 8080'
                    format: int32
                    type: integer
                  standaloneHttpsHost:
                    description: Specifies the SSL certificate hostname.
                    type: string
                  standaloneHttpsPort:
                    description: 'Specifies the HTTPS listen port. Default: 8443'
                    format: int32
                    type: integer
                  standaloneStopTimeout:
                    description: 'Specifies the period for Standalone Mode to wait
                      until it is gracefully shutdown. Default: 10s (10 seconds)'
                    format: int32
                    type: integer
                type: object
              image:
                type: string
              imagePullPolicy:
                description: PullPolicy describes a policy for if/when to pull a container
                  image
                type: string
              imagePullSecrets:
                type: string
              replicas:
                format: int32
                minimum: 1
                type: integer
              servicePort:
                format: int32
                type: integer
              workloadType:
                type: string
            required:
            - globalSettings
            - image
            type: object
          status:
            description: RestDataServicesStatus defines the observed state of RestDataServices
            properties:
              conditions:
                description: Conditions store the status conditions of the ORDS instances
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              image:
                type: string
              replicas:
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
